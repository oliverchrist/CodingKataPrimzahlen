<?php

require_once dirname(__FILE__) . '/../Primzahl.php';

/**
 * Test class for Primzahl.
 * Generated by PHPUnit on 2012-01-06 at 10:12:59.
 */
class PrimzahlTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Primzahl
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Primzahl;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testIsPrimzahl().
     */
    public function testIsPrimzahl() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testEchoPrimzahlen().
     */
    public function testEchoPrimzahlen() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testPrimzahl1bis10(){
        $this->assertFalse(Primzahl::isPrimzahl(1));
        $this->assertTrue(Primzahl::isPrimzahl(2));
        $this->assertTrue(Primzahl::isPrimzahl(3));
        $this->assertFalse(Primzahl::isPrimzahl(4));
        $this->assertTrue(Primzahl::isPrimzahl(5));
        $this->assertFalse(Primzahl::isPrimzahl(6));
        $this->assertTrue(Primzahl::isPrimzahl(7));
        $this->assertFalse(Primzahl::isPrimzahl(8));
        $this->assertFalse(Primzahl::isPrimzahl(9));
        $this->assertFalse(Primzahl::isPrimzahl(10));
    }
    public function testPrimzahl11bis100(){
        $this->assertTrue(Primzahl::isPrimzahl(11));
        $this->assertTrue(Primzahl::isPrimzahl(13));
        $this->assertTrue(Primzahl::isPrimzahl(17));
        $this->assertTrue(Primzahl::isPrimzahl(19));
        $this->assertTrue(Primzahl::isPrimzahl(23));
        $this->assertTrue(Primzahl::isPrimzahl(29));
        $this->assertTrue(Primzahl::isPrimzahl(31));
        $this->assertTrue(Primzahl::isPrimzahl(37));
        $this->assertTrue(Primzahl::isPrimzahl(41));
        $this->assertTrue(Primzahl::isPrimzahl(43));
        $this->assertTrue(Primzahl::isPrimzahl(47));
        $this->assertTrue(Primzahl::isPrimzahl(53));
        $this->assertTrue(Primzahl::isPrimzahl(59));
        $this->assertTrue(Primzahl::isPrimzahl(61));
        $this->assertTrue(Primzahl::isPrimzahl(67));
        $this->assertTrue(Primzahl::isPrimzahl(71));
        $this->assertTrue(Primzahl::isPrimzahl(73));
        $this->assertTrue(Primzahl::isPrimzahl(79));
        $this->assertTrue(Primzahl::isPrimzahl(83));
        $this->assertTrue(Primzahl::isPrimzahl(89));
        $this->assertTrue(Primzahl::isPrimzahl(97));
    }
    
    public function testHoechstePrimzahl10() {
        $this->assertEquals(7, $this->object->echoHoechstePrimzahl(10));
        $this->assertEquals(97, $this->object->echoHoechstePrimzahl(100));
        $this->assertEquals(997, $this->object->echoHoechstePrimzahl(1000));
        $this->assertEquals(997, $this->object->echoHoechstePrimzahl(10000));
    }
}

?>
